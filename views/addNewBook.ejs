<!--
  @file addNewBook.html
  @description BeeReader - Page for adding new books to the library.
               Users can enter book details and upload a cover image.
  @created 2025-06-09
  @author Juan Liao
  @lastModified 2025-07-31 by Juan Liao - Initial version with async JS submit
-->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- Viewport for mobile responsiveness -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Stylesheets for base layout and page-specific styling -->
    <link rel="stylesheet" href="/css/index.css" />
    <link rel="stylesheet" href="/css/addNewBook.css" />

    <!-- Dynamic title using templating engine like EJS -->
    <title><%= title || "Add New Book - BeeReader" %></title>
  </head>

  <body>
    <!-- Site Header with logo and branding -->
    <header class="heading">
      <div class="site-name">BeeReader</div>
      <img src="/images/logo.png" alt="BeeReader logo with a bee" />
    </header>

    <main class="main-content">
      <div class="form-case">
        <h1>Add New Book</h1>

        <!-- Book submission form. Uses multipart/form-data for file upload. -->
        <form id="book-form" method="POST" enctype="multipart/form-data">
          <!-- Book title -->
          <div>
            <label for="title">Title:</label>
            <input type="text" name="title" id="title" required />
          </div>

          <!-- Author name -->
          <div>
            <label for="author">Author:</label>
            <input type="text" name="author" id="author" required />
          </div>

          <!-- Publication year -->
          <div>
            <label for="year">Year:</label>
            <input type="number" name="year" id="year" required />
          </div>

          <!-- Book cover image upload -->
          <div>
            <label for="cover">Cover Image:</label>
            <input
              type="file"
              name="cover"
              id="cover"
              accept="image/*"
              required
            />
          </div>

          <!-- Genre (optional) -->
          <div>
            <label for="genre">Genre:</label>
            <input type="text" name="genre" id="genre" />
          </div>

          <!-- Submit button -->
          <button type="submit" class="text-btn">Save</button>
        </form>
      </div>
    </main>

    <script>
      /**
       * @description Intercepts the form submission and sends the form data
       * asynchronously via `fetch` to avoid page reload and improve UX.
       * Prevent double submission by disabling the button during async operation
       */
      const form = document.getElementById("book-form");
      const button = form.querySelector("button[type='submit']");

      form.addEventListener("submit", async function (event) {
        event.preventDefault(); // prevent default form submission behavior

        const form = event.target;
        const formData = new FormData(form); // collect form data including file
        button.disabled = true;
        button.textContent = "Saving...";
        try {
          const response = await fetch(`${process.env.BASE_URL}/api/books`, {
            method: form.method,
            body: formData,
            credentials: "include", // send cookies (if needed for session/auth)
          });

          const result = await response.json();

          // Server-side success case
          if (result.state === "1") {
            alert("Book added successfully!");
            window.location.href = "/library"; // navigate back to library
          } else {
            // Server-side validation or other failure
            alert(`Failed to add book: ${result.message}`);
          }
        } catch (error) {
          // Network or unexpected error
          console.error("Error adding book:", error);
          alert("An unexpected error occurred.");
        } finally {
          button.disabled = false;
          button.textContent = "Save";
        }
      });
    </script>
  </body>
</html>

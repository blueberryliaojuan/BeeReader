<!--
  @file editBook.ejs
  @description BeeReader - Edit Book Page
               This page allows users to update an existing book entry.
               Users can modify title, author, year, genre, and optionally upload a new cover image.
  @created 2025-06-09
-->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- Responsive settings for mobile devices -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Shared layout and custom styling -->
    <link rel="stylesheet" href="/css/index.css" />
    <link rel="stylesheet" href="/css/addNewBook.css" />

    <!-- Page title (populated via EJS) -->
    <title><%= title|| "Edit Book - BeeReader" %></title>
  </head>

  <body>
    <!-- ===== Site Header ===== -->
    <header class="heading">
      <div class="site-name">BeeReader</div>
      <img src="/images/logo.png" alt="BeeReader Logo" />
    </header>

    <!-- ===== Main Content ===== -->
    <main class="main-content">
      <h1>Edit Book</h1>

      <!-- 
        Edit form for book.
        Uses FormData and fetch() to send PUT request with possible image upload.
      -->
      <form
        id="book-form"
        action="/api/books"
        method="POST"
        enctype="multipart/form-data"
      >
        <!-- Book ID (hidden) -->
        <input type="hidden" name="id" id="id" value="<%= data.id %>" />

        <!-- Book Title -->
        <div>
          <label for="title">Title:</label>
          <input
            type="text"
            name="title"
            id="title"
            value="<%= data.title %>"
            required
          />
        </div>

        <!-- Author -->
        <div>
          <label for="author">Author:</label>
          <input
            type="text"
            name="author"
            id="author"
            value="<%= data.author %>"
            required
          />
        </div>

        <!-- Publication Year -->
        <div>
          <label for="year">Year:</label>
          <input
            type="number"
            name="year"
            id="year"
            value="<%= data.year %>"
            required
            min="1000"
            max="2100"
          />
        </div>

        <!-- Optional new cover image -->
        <div>
          <label for="cover">Cover Image:</label>
          <input type="file" name="cover" id="cover" accept="image/*" />
          <% if (data.image_url) { %>
          <p>Current cover: <%= data.image_url %></p>
          <img
            id="cover-preview"
            src="<%= data.image_url %>"
            alt="Current cover image"
            style="max-width: 120px"
          />
          <% } %>
        </div>

        <!-- Hidden field to preserve original image if not replaced -->
        <input
          type="hidden"
          name="existingCover"
          value="<%= data.image_url %>"
        />

        <!-- Optional Genre -->
        <div>
          <label for="genre">Genre:</label>
          <input
            type="text"
            name="genre"
            id="genre"
            value="<%= data.genre || '' %>"
          />
        </div>

        <!-- Save button -->
        <button type="submit">Save</button>
      </form>
    </main>

    <!-- ===== Client-side Script ===== -->
    <script>
       /**
        * Handles form submission with JavaScript.
        * Sends a PUT request with FormData (including optional file).
        */



       const data = <%- JSON.stringify(data) %>; // Inject server-rendered data
       const { id } = data;
       const form = document.getElementById("book-form");
       const coverInput = document.getElementById("cover");
       const coverPreview = document.getElementById("cover-preview");
       const submitBtn = form.querySelector("button[type='submit']");

      //preview cover
       coverInput.addEventListener("change", () => {
       const file = coverInput.files[0];
       if (file) {
       const reader = new FileReader();
       reader.onload = (e) => {
         coverPreview.src = e.target.result; // preview new cover
       };
       reader.readAsDataURL(file);
       } else {
       // recover the original cover
       coverPreview.src = data.image_url || "";
       }
       });

       form.addEventListener("submit", async function (e) {
           e.preventDefault(); // Prevent full page reload

           const form = e.target;
           const formData = new FormData(form); // Includes text + file
           submitBtn.disabled = true;
           try {
             const response = await fetch(`/api/books/${id}`, {
               method: "PUT",
               body: formData,
               credentials: "include", // Keep session cookies
             });

             const result = await response.json();

             if (result.state === "1") {
               alert("Book saved successfully!");
               window.location.href = "/library";
             } else {
               alert("Save failed: " + result.msg);
             }
           } catch (error) {
             console.error("Submit error:", error);
             alert("Something went wrong.");
           }finally {
             submitBtn.disabled = false;
           }
         });
    </script>
  </body>
</html>
